{"version":3,"sources":["views/MovieDetails.module.css","components/Cast/Cast.jsx","views/MovieDetailsPage.jsx"],"names":["module","exports","Cast","movieId","useState","cast","setCast","useEffect","ApiService","then","data","results","catch","e","map","cas","profile_path","width","src","alt","original_name","name","character","id","MovieDetailsPage","useParams","movie","setMovie","url","useRouteMatch","toast","error","className","type","s","wrap","poster_path","allTitleWrap","title","titleUp","subtitle","vote_average","overview","genres","el","path","link","to"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,aAAe,mCAAmC,SAAW,+BAA+B,QAAU,8BAA8B,KAAO,6B,+HCGpN,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OAPAC,qBAAU,WAIR,OAHAC,IAAuBL,GACpBM,MAAK,SAACC,GAAD,OAAUJ,EAAQI,EAAKC,YAC5BC,OAAM,SAACC,OACH,eACN,CAACV,IAGF,6BACGE,EAAKS,KAAI,SAACC,GACT,GAAMA,EAAIC,aACR,OACE,+BACE,qBACEC,MAAM,MACNC,IAAG,yCAAoCH,EAAIC,cAC3CG,IAAKJ,EAAIK,gBAEX,4BAAIL,EAAIM,OACR,4BAAIN,EAAIO,cAPDP,EAAIQ,S,6BCdV,SAASC,IACtB,IAAQrB,EAAYsB,cAAZtB,QACR,EAA0BC,mBAAS,MAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KACQC,EAAQC,cAARD,IAWR,OATArB,qBAAU,WACRC,IAAwBL,GACrBM,KAAKkB,GACLf,OAAM,SAACC,GACNiB,IAAMC,MAAM,2CAEf,CAAC5B,IAIF,mCACGuB,GACC,qCACE,wBAAQM,UAAU,SAASC,KAAK,SAAhC,wBAGA,sBAAKD,UAAWE,IAAEC,KAAlB,UACE,qBACElB,MAAM,QACNC,IAAG,yCAAoCQ,EAAMU,aAC7CjB,IAAI,oBAEN,sBAAKa,UAAWE,IAAEG,aAAlB,UACE,oBAAIL,UAAWE,IAAEI,MAAjB,SAAyBZ,EAAMY,QAC/B,gCACE,oBAAIN,UAAWE,IAAEK,QAAjB,wBACA,oBAAGP,UAAWE,IAAEM,SAAhB,UAAgD,GAArBd,EAAMe,aAAjC,WAEF,gCACE,oBAAIT,UAAWE,IAAEK,QAAjB,sBACA,mBAAGP,UAAWE,IAAEM,SAAhB,SAA2Bd,EAAMgB,cAEnC,gCACE,oBAAIV,UAAWE,IAAEK,QAAjB,oBACA,mBAAGP,UAAWE,IAAEM,SAAhB,SACGd,EAAMiB,OAAO7B,KAAI,SAAC8B,GACjB,OAAOA,EAAGvB,KAAO,kBAM3B,gCACE,uBACA,oBAAIW,UAAWE,IAAEK,QAAjB,oCACA,cAAC,IAAD,CAAOM,KAAK,kBAAZ,SACE,eAAC,IAAD,CAAMb,UAAWE,IAAEY,KAAMC,GAAE,UAAKnB,EAAL,SAA3B,UACE,cAAC1B,EAAD,CAAMwB,MAAOvB,IADf,aAIF,uBACA,cAAC,IAAD,CAAO0C,KAAK,qBAAZ,SACE,cAAC,IAAD,CAAMb,UAAWE,IAAEY,KAAMC,GAAE,UAAKnB,EAAL,YAA3B","file":"static/js/6.55c48aa3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MovieDetails_wrap__1pDeQ\",\"title\":\"MovieDetails_title__f8s4e\",\"allTitleWrap\":\"MovieDetails_allTitleWrap__1QJn4\",\"subtitle\":\"MovieDetails_subtitle__1fgua\",\"titleUp\":\"MovieDetails_titleUp__2W2Px\",\"link\":\"MovieDetails_link__2knw0\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as ApiService from \"../../services/ApiService\";\n\nexport default function Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n  // const { castId } = useParams();\n  // const movies = movie.find((mov) => mov.id === castId);\n  // console.log(movies);\n\n  useEffect(() => {\n    ApiService.fetchCastId(movieId)\n      .then((data) => setCast(data.results))\n      .catch((e) => {});\n    return () => {};\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.map((cas) => {\n        if (!!cas.profile_path) {\n          return (\n            <li key={cas.id}>\n              <img\n                width=\"150\"\n                src={`https://image.tmdb.org/t/p/w500${cas.profile_path}`}\n                alt={cas.original_name}\n              />\n              <p>{cas.name}</p>\n              <p>{cas.character}</p>\n            </li>\n          );\n        }\n      })}\n    </ul>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useParams, useRouteMatch, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport * as ApiService from \"../services/ApiService\";\nimport Cast from \"../components/Cast/Cast\";\nimport s from \"./MovieDetails.module.css\";\nimport { toast } from \"react-toastify\";\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    ApiService.fetchMovieId(movieId)\n      .then(setMovie)\n      .catch((e) => {\n        toast.error(\"We're sorry, we havent information\");\n      });\n  }, [movieId]);\n  // console.log(movie);\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button className=\"Button\" type=\"button\">\n            Go to Back\n          </button>\n          <div className={s.wrap}>\n            <img\n              width=\"350px\"\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt=\"{movie.tagline}\"\n            />\n            <div className={s.allTitleWrap}>\n              <h2 className={s.title}>{movie.title}</h2>\n              <div>\n                <h4 className={s.titleUp}>User Score</h4>\n                <p className={s.subtitle}>{movie.vote_average * 10} %</p>\n              </div>\n              <div>\n                <h3 className={s.titleUp}>Overview</h3>\n                <p className={s.subtitle}>{movie.overview}</p>\n              </div>\n              <div>\n                <h4 className={s.titleUp}>Genres</h4>\n                <p className={s.subtitle}>\n                  {movie.genres.map((el) => {\n                    return el.name + \" \";\n                  })}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div>\n            <hr />\n            <h3 className={s.titleUp}>Additional information</h3>\n            <Route path=\"/movies/:castId\">\n              <Link className={s.link} to={`${url}/cast`}>\n                <Cast movie={movieId} /> Cast\n              </Link>\n            </Route>\n            <br />\n            <Route path=\"/movies/:reviewsId\">\n              <Link className={s.link} to={`${url}/reviews`}>\n                Reviews\n              </Link>\n            </Route>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}